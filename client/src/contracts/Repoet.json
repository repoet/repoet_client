{
  "contractName": "Repoet",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "indexToTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerToTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poems",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "hashedTitle",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "hashedContent",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hashedContent",
          "type": "bytes32"
        }
      ],
      "name": "contentIsUnique",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPOEMs",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashedContent\",\"type\":\"bytes32\"}],\"name\":\"contentIsUnique\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPOEMs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"indexToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poems\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hashedTitle\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashedContent\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}).     * If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings.     * .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"token.uri/123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"\\\" | \\\"token.uri/<tokenId>\\\" |===     * Requirements:     * - `tokenId` must exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/contracts/Repoet.sol\":\"Repoet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/contracts/Repoet.sol\":{\"keccak256\":\"0x157f7f048caa6b32a50bc8447b006e3a5ae87af1cfeb19137f8422683f070c6b\",\"urls\":[\"bzz-raw://6a1f332e07c40552660e1e2ce6a9c81fb13a9eb1082a6067c1ca71d75e1a2e4f\",\"dweb:/ipfs/QmVi62yRXC4re6voCmBtxgnwBz8a3iBGTtvm6YHQN31G7H\"]},\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x98aa1380fd49a255d6cbea58558ea76bff35c59b218671fde8842907b44e7390\",\"urls\":[\"bzz-raw://613eaff66d4c270ddd87448c06267b6e043ef8c8223cb39d8767bc9daa9cb1ec\",\"dweb:/ipfs/Qmcg56orudv25ghmnZCxN37HwNKCXmTTDxj5cyoYYnvHTg\"]},\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x67a43d3926e72576c96ebf0e6360c979a8cc04f25e4b0ca40c221547d8903ba4\",\"urls\":[\"bzz-raw://77c6f48115c491411f0e27f6b70e2e524b1b57c66e74bd7f1974a31a448e2540\",\"dweb:/ipfs/QmPZCizouS9PVJ1dVf8zqTjHyEo5cSa1ZmPCQpk52TgrmV\"]},\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x708f339ccc3e9d164ec61bb0db7d4c224161a3bca52413c8bbeddb114154e52b\",\"urls\":[\"bzz-raw://1462c089d30cd75f9ce18c39a26f41adcb74e4a14d2cb9f5c8bcb0a8631fa660\",\"dweb:/ipfs/QmP9hGNkYTpRazqXnQoSyiUiL8DJr3Y8nX9Wcg7SukNMUf\"]},\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x09bbc2d7d73986e6e645d0dd65cd16f41248e5cc991f06d42db2946b5f2e3786\",\"urls\":[\"bzz-raw://4f5f3ca771fe28f1bd7de5521bb2ef23b7fadb681b0b0a7ed13d0e2772a1d945\",\"dweb:/ipfs/QmSbLtedzXRjruuhQjx7AXjpg5CGC98g1TBKaVUf1nU38a\"]},\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x435bd9ac283c6678ac71c809bae5fb738ea2228b7cf8663ad111894d19f567cb\",\"urls\":[\"bzz-raw://01d79169830e56ab0980901b66d4b404db89acfafd5836903eadf0df22f8dcdd\",\"dweb:/ipfs/QmTTBj8GUZoMZ8EH7YyaV88QmD4QDg32vs2KNymdUKAoMd\"]},\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x0c25ff00a747f1df6cb5e5c103adb98334df7e9561b0d46079454131c139bff9\",\"urls\":[\"bzz-raw://9417ce94829309329fa0f0dc50089696bc55f9f675c4b2ffcb31f960fe706250\",\"dweb:/ipfs/QmdckiAmnW2uhXK2V2enu7bEbqiMR6hzMD1ytGH43pKLhE\"]},\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xfd5cf8319cb84ca04ea407d6fba686d53ad7f5d2bf476f41678f5a751d12a7ea\",\"urls\":[\"bzz-raw://45b75b553c4a9053429609b1c3db481f1728ca00448f01acc4065249bbf87adc\",\"dweb:/ipfs/QmRZH6QM32mJn1GZCAPXUQtBz65H4kk6DsGQbGNo4ZNPy9\"]},\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x7f6401708b61f575b497aa7c8118ca9d70348643c83c26e70d9b643edf1a95c1\",\"urls\":[\"bzz-raw://b020d65f592c1715bc3d5799ad835cd975ef7d314f340f27603fb99ad86a0427\",\"dweb:/ipfs/QmQoGZmzE5aDTMGJM4BW77eraerfTSV9Rs8wykpQ42i1in\"]},\"/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xd1d78b1c8534fbcf8fdc8fbfec9133df142ef8cae9ae820929dfe6d80d2c790a\",\"urls\":[\"bzz-raw://193a827fbe83fa83c4cabb172dc438dd45c50253858a1f2bf56e8f9a2d548386\",\"dweb:/ipfs/QmbWBHwHv7CyHSZY6jxnaDiHWGEEyVb8LeGdRpWXUjaiBr\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600d553480156200001657600080fd5b506040518060400160405280600681526020017f5265706f657400000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f504f454d000000000000000000000000000000000000000000000000000000008152506200009b6301ffc9a760e01b6200011d60201b60201c565b8160069080519060200190620000b392919062000226565b508060079080519060200190620000cc92919062000226565b50620000e56380ac58cd60e01b6200011d60201b60201c565b620000fd635b5e139f60e01b6200011d60201b60201c565b6200011563780e9d6360e01b6200011d60201b60201c565b5050620002d5565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200026957805160ff19168380011785556200029a565b828001600101855582156200029a579182015b82811115620002995782518255916020019190600101906200027c565b5b509050620002a99190620002ad565b5090565b620002d291905b80821115620002ce576000816000905550600101620002b4565b5090565b90565b6129c580620002e56000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636c0360eb116100de57806395d89b4111610097578063c7bde51e11610071578063c7bde51e14610924578063c87b56dd14610986578063e985e9c514610a2d578063fdd1fb5814610aa957610173565b806395d89b411461074c578063a22cb465146107cf578063b88d4fde1461081f57610173565b80636c0360eb146105cd57806370a08231146106505780637aef1164146106a85780637e1c0c09146106ea578063893d20e8146107085780639362916b1461072a57610173565b806323b872dd1161013057806323b872dd1461035c5780632f745c59146103ca57806342842e0e1461042c5780634f6ccce71461049a5780635b93f270146104dc5780636352211e1461055f57610173565b806301ffc9a71461017857806306fdde03146101dd578063081812fc14610260578063095ea7b3146102ce5780631249c58b1461031c57806318160ddd1461033e575b600080fd5b6101c36004803603602081101561018e57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610aef565b604051808215151515815260200191505060405180910390f35b6101e5610b56565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022557808201518184015260208101905061020a565b50505050905090810190601f1680156102525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61028c6004803603602081101561027657600080fd5b8101908080359060200190929190505050610bf8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61031a600480360360408110156102e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c93565b005b610324610dd7565b604051808215151515815260200191505060405180910390f35b610346610de0565b6040518082815260200191505060405180910390f35b6103c86004803603606081101561037257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610df1565b005b610416600480360360408110156103e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e67565b6040518082815260200191505060405180910390f35b6104986004803603606081101561044257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ec2565b005b6104c6600480360360208110156104b057600080fd5b8101908080359060200190929190505050610ee2565b6040518082815260200191505060405180910390f35b610508600480360360208110156104f257600080fd5b8101908080359060200190929190505050610f05565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390f35b61058b6004803603602081101561057557600080fd5b8101908080359060200190929190505050610f55565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105d5610f8c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106155780820151818401526020810190506105fa565b50505050905090810190601f1680156106425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106926004803603602081101561066657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061102e565b6040518082815260200191505060405180910390f35b6106d4600480360360208110156106be57600080fd5b8101908080359060200190929190505050611103565b6040518082815260200191505060405180910390f35b6106f261111b565b6040518082815260200191505060405180910390f35b610710611121565b604051808215151515815260200191505060405180910390f35b61073261112a565b604051808215151515815260200191505060405180910390f35b610754611133565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610794578082015181840152602081019050610779565b50505050905090810190601f1680156107c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61081d600480360360408110156107e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506111d5565b005b6109226004803603608081101561083557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561089c57600080fd5b8201836020820111156108ae57600080fd5b803590602001918460018302840111640100000000831117156108d057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061138d565b005b6109706004803603604081101561093a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611405565b6040518082815260200191505060405180910390f35b6109b26004803603602081101561099c57600080fd5b8101908080359060200190929190505050611433565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109f25780820151818401526020810190506109d7565b50505050905090810190601f168015610a1f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a8f60048036036040811015610a4357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061171c565b604051808215151515815260200191505060405180910390f35b610ad560048036036020811015610abf57600080fd5b81019080803590602001909291905050506117b0565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bee5780601f10610bc357610100808354040283529160200191610bee565b820191906000526020600020905b815481529060010190602001808311610bd157829003601f168201915b5050505050905090565b6000610c038261187b565b610c58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806128ba602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610c9e82610f55565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061293e6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610d44611898565b73ffffffffffffffffffffffffffffffffffffffff161480610d735750610d7281610d6d611898565b61171c565b5b610dc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603881526020018061280d6038913960400191505060405180910390fd5b610dd283836118a0565b505050565b60006001905090565b6000610dec6002611959565b905090565b610e02610dfc611898565b8261196e565b610e57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061295f6031913960400191505060405180910390fd5b610e62838383611a62565b505050565b6000610eba82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611ca590919063ffffffff16565b905092915050565b610edd8383836040518060200160405280600081525061138d565b505050565b600080610ef9836002611cbf90919063ffffffff16565b50905080915050919050565b600a6020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b6000610f858260405180606001604052806029815260200161286f602991396002611cee9092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110245780601f10610ff957610100808354040283529160200191611024565b820191906000526020600020905b81548152906001019060200180831161100757829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612845602a913960400191505060405180910390fd5b6110fc600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d0d565b9050919050565b600e6020528060005260406000206000915090505481565b600d5481565b60006001905090565b60006001905090565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111cb5780601f106111a0576101008083540402835291602001916111cb565b820191906000526020600020905b8154815290600101906020018083116111ae57829003601f168201915b5050505050905090565b6111dd611898565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561127e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b806005600061128b611898565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611338611898565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61139e611398611898565b8361196e565b6113f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061295f6031913960400191505060405180910390fd5b6113ff84848484611d22565b50505050565b600c602052816000526040600020818154811061141e57fe5b90600052602060002001600091509150505481565b606061143e8261187b565b611493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061290f602f913960400191505060405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561153c5780601f106115115761010080835404028352916020019161153c565b820191906000526020600020905b81548152906001019060200180831161151f57829003601f168201915b5050505050905060006009805460018160011615610100020316600290049050141561156b5780915050611717565b6000815111156116445760098160405160200180838054600181600116156101000203166002900480156115d65780601f106115b45761010080835404028352918201916115d6565b820191906000526020600020905b8154815290600101906020018083116115c2575b505082805190602001908083835b6020831061160757805182526020820191506020810190506020830392506115e4565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050611717565b600961164f84611d94565b60405160200180838054600181600116156101000203166002900480156116ad5780601f1061168b5761010080835404028352918201916116ad565b820191906000526020600020905b815481529060010190602001808311611699575b505082805190602001908083835b602083106116de57805182526020820191506020810190506020830392506116bb565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600b600083815260200190815260200160002060009054906101000a900460ff1615611846576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f504f454d20636f6e74656e74206e6f7420756e6971756500000000000000000081525060200191505060405180910390fd5b6001600b600084815260200190815260200160002060006101000a81548160ff02191690831515021790555060019050919050565b6000611891826002611ec490919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661191383610f55565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061196782600001611ede565b9050919050565b60006119798261187b565b6119ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806127e1602c913960400191505060405180910390fd5b60006119d983610f55565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a4857508373ffffffffffffffffffffffffffffffffffffffff16611a3084610bf8565b73ffffffffffffffffffffffffffffffffffffffff16145b80611a595750611a58818561171c565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611a8282610f55565b73ffffffffffffffffffffffffffffffffffffffff1614611aee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806128e66029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b74576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806127bd6024913960400191505060405180910390fd5b611b7f838383611eef565b611b8a6000826118a0565b611bdb81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611ef490919063ffffffff16565b50611c2d81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611f0e90919063ffffffff16565b50611c4481836002611f289092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611cb48360000183611f5d565b60001c905092915050565b600080600080611cd28660000186611fe0565b915091508160001c8160001c8090509350935050509250929050565b6000611d01846000018460001b84612079565b60001c90509392505050565b6000611d1b8260000161216f565b9050919050565b611d2d848484611a62565b611d3984848484612180565b611d8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018061278b6032913960400191505060405180910390fd5b50505050565b60606000821415611ddc576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611ebf565b600082905060005b60008214611e06578080600101915050600a8281611dfe57fe5b049150611de4565b6060816040519080825280601f01601f191660200182016040528015611e3b5781602001600182028038833980820191505090505b50905060006001830390508593505b60008414611eb757600a8481611e5c57fe5b0660300160f81b82828060019003935081518110611e7657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481611eaf57fe5b049350611e4a565b819450505050505b919050565b6000611ed6836000018360001b6124a3565b905092915050565b600081600001805490509050919050565b505050565b6000611f06836000018360001b6124c6565b905092915050565b6000611f20836000018360001b6125ae565b905092915050565b6000611f54846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b61261e565b90509392505050565b600081836000018054905011611fbe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806127696022913960400191505060405180910390fd5b826000018281548110611fcd57fe5b9060005260206000200154905092915050565b60008082846000018054905011612042576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806128986022913960400191505060405180910390fd5b600084600001848154811061205357fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390612140576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121055780820151818401526020810190506120ea565b50505050905090810190601f1680156121325780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061215357fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b60006121a18473ffffffffffffffffffffffffffffffffffffffff166126fa565b6121ae576001905061249b565b600060608573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b6121d9611898565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561228957808201518184015260208101905061226e565b50505050905090810190601f1680156122b65780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061234e578051825260208201915060208101905060208303925061232b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146123b0576040519150601f19603f3d011682016040523d82523d6000602084013e6123b5565b606091505b509150915081612423576000815111156123d25780518082602001fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018061278b6032913960400191505060405180910390fd5b600081806020019051602081101561243a57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b600080836001016000848152602001908152602001600020549050600081146125a2576000600182039050600060018660000180549050039050600086600001828154811061251157fe5b906000526020600020015490508087600001848154811061252e57fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061256657fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506125a8565b60009150505b92915050565b60006125ba8383612745565b612613578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612618565b600090505b92915050565b60008084600101600085815260200190815260200160002054905060008114156126c5578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506126f3565b828560000160018303815481106126d857fe5b90600052602060002090600202016001018190555060009150505b9392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561273c57506000801b8214155b92505050919050565b60008083600101600084815260200190815260200160002054141590509291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a264697066735822122091ed3c2efafb4f5e3fe6c2a1afd58210f9092eac7b35116d0b9475c9c4af705164736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80636c0360eb116100de57806395d89b4111610097578063c7bde51e11610071578063c7bde51e14610924578063c87b56dd14610986578063e985e9c514610a2d578063fdd1fb5814610aa957610173565b806395d89b411461074c578063a22cb465146107cf578063b88d4fde1461081f57610173565b80636c0360eb146105cd57806370a08231146106505780637aef1164146106a85780637e1c0c09146106ea578063893d20e8146107085780639362916b1461072a57610173565b806323b872dd1161013057806323b872dd1461035c5780632f745c59146103ca57806342842e0e1461042c5780634f6ccce71461049a5780635b93f270146104dc5780636352211e1461055f57610173565b806301ffc9a71461017857806306fdde03146101dd578063081812fc14610260578063095ea7b3146102ce5780631249c58b1461031c57806318160ddd1461033e575b600080fd5b6101c36004803603602081101561018e57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610aef565b604051808215151515815260200191505060405180910390f35b6101e5610b56565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022557808201518184015260208101905061020a565b50505050905090810190601f1680156102525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61028c6004803603602081101561027657600080fd5b8101908080359060200190929190505050610bf8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61031a600480360360408110156102e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c93565b005b610324610dd7565b604051808215151515815260200191505060405180910390f35b610346610de0565b6040518082815260200191505060405180910390f35b6103c86004803603606081101561037257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610df1565b005b610416600480360360408110156103e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e67565b6040518082815260200191505060405180910390f35b6104986004803603606081101561044257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ec2565b005b6104c6600480360360208110156104b057600080fd5b8101908080359060200190929190505050610ee2565b6040518082815260200191505060405180910390f35b610508600480360360208110156104f257600080fd5b8101908080359060200190929190505050610f05565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390f35b61058b6004803603602081101561057557600080fd5b8101908080359060200190929190505050610f55565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105d5610f8c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106155780820151818401526020810190506105fa565b50505050905090810190601f1680156106425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106926004803603602081101561066657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061102e565b6040518082815260200191505060405180910390f35b6106d4600480360360208110156106be57600080fd5b8101908080359060200190929190505050611103565b6040518082815260200191505060405180910390f35b6106f261111b565b6040518082815260200191505060405180910390f35b610710611121565b604051808215151515815260200191505060405180910390f35b61073261112a565b604051808215151515815260200191505060405180910390f35b610754611133565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610794578082015181840152602081019050610779565b50505050905090810190601f1680156107c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61081d600480360360408110156107e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506111d5565b005b6109226004803603608081101561083557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561089c57600080fd5b8201836020820111156108ae57600080fd5b803590602001918460018302840111640100000000831117156108d057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061138d565b005b6109706004803603604081101561093a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611405565b6040518082815260200191505060405180910390f35b6109b26004803603602081101561099c57600080fd5b8101908080359060200190929190505050611433565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109f25780820151818401526020810190506109d7565b50505050905090810190601f168015610a1f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a8f60048036036040811015610a4357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061171c565b604051808215151515815260200191505060405180910390f35b610ad560048036036020811015610abf57600080fd5b81019080803590602001909291905050506117b0565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bee5780601f10610bc357610100808354040283529160200191610bee565b820191906000526020600020905b815481529060010190602001808311610bd157829003601f168201915b5050505050905090565b6000610c038261187b565b610c58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806128ba602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610c9e82610f55565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061293e6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610d44611898565b73ffffffffffffffffffffffffffffffffffffffff161480610d735750610d7281610d6d611898565b61171c565b5b610dc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603881526020018061280d6038913960400191505060405180910390fd5b610dd283836118a0565b505050565b60006001905090565b6000610dec6002611959565b905090565b610e02610dfc611898565b8261196e565b610e57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061295f6031913960400191505060405180910390fd5b610e62838383611a62565b505050565b6000610eba82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611ca590919063ffffffff16565b905092915050565b610edd8383836040518060200160405280600081525061138d565b505050565b600080610ef9836002611cbf90919063ffffffff16565b50905080915050919050565b600a6020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b6000610f858260405180606001604052806029815260200161286f602991396002611cee9092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110245780601f10610ff957610100808354040283529160200191611024565b820191906000526020600020905b81548152906001019060200180831161100757829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612845602a913960400191505060405180910390fd5b6110fc600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d0d565b9050919050565b600e6020528060005260406000206000915090505481565b600d5481565b60006001905090565b60006001905090565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111cb5780601f106111a0576101008083540402835291602001916111cb565b820191906000526020600020905b8154815290600101906020018083116111ae57829003601f168201915b5050505050905090565b6111dd611898565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561127e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b806005600061128b611898565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611338611898565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61139e611398611898565b8361196e565b6113f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061295f6031913960400191505060405180910390fd5b6113ff84848484611d22565b50505050565b600c602052816000526040600020818154811061141e57fe5b90600052602060002001600091509150505481565b606061143e8261187b565b611493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061290f602f913960400191505060405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561153c5780601f106115115761010080835404028352916020019161153c565b820191906000526020600020905b81548152906001019060200180831161151f57829003601f168201915b5050505050905060006009805460018160011615610100020316600290049050141561156b5780915050611717565b6000815111156116445760098160405160200180838054600181600116156101000203166002900480156115d65780601f106115b45761010080835404028352918201916115d6565b820191906000526020600020905b8154815290600101906020018083116115c2575b505082805190602001908083835b6020831061160757805182526020820191506020810190506020830392506115e4565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050611717565b600961164f84611d94565b60405160200180838054600181600116156101000203166002900480156116ad5780601f1061168b5761010080835404028352918201916116ad565b820191906000526020600020905b815481529060010190602001808311611699575b505082805190602001908083835b602083106116de57805182526020820191506020810190506020830392506116bb565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600b600083815260200190815260200160002060009054906101000a900460ff1615611846576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f504f454d20636f6e74656e74206e6f7420756e6971756500000000000000000081525060200191505060405180910390fd5b6001600b600084815260200190815260200160002060006101000a81548160ff02191690831515021790555060019050919050565b6000611891826002611ec490919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661191383610f55565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061196782600001611ede565b9050919050565b60006119798261187b565b6119ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806127e1602c913960400191505060405180910390fd5b60006119d983610f55565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a4857508373ffffffffffffffffffffffffffffffffffffffff16611a3084610bf8565b73ffffffffffffffffffffffffffffffffffffffff16145b80611a595750611a58818561171c565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611a8282610f55565b73ffffffffffffffffffffffffffffffffffffffff1614611aee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806128e66029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b74576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806127bd6024913960400191505060405180910390fd5b611b7f838383611eef565b611b8a6000826118a0565b611bdb81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611ef490919063ffffffff16565b50611c2d81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611f0e90919063ffffffff16565b50611c4481836002611f289092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611cb48360000183611f5d565b60001c905092915050565b600080600080611cd28660000186611fe0565b915091508160001c8160001c8090509350935050509250929050565b6000611d01846000018460001b84612079565b60001c90509392505050565b6000611d1b8260000161216f565b9050919050565b611d2d848484611a62565b611d3984848484612180565b611d8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018061278b6032913960400191505060405180910390fd5b50505050565b60606000821415611ddc576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611ebf565b600082905060005b60008214611e06578080600101915050600a8281611dfe57fe5b049150611de4565b6060816040519080825280601f01601f191660200182016040528015611e3b5781602001600182028038833980820191505090505b50905060006001830390508593505b60008414611eb757600a8481611e5c57fe5b0660300160f81b82828060019003935081518110611e7657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481611eaf57fe5b049350611e4a565b819450505050505b919050565b6000611ed6836000018360001b6124a3565b905092915050565b600081600001805490509050919050565b505050565b6000611f06836000018360001b6124c6565b905092915050565b6000611f20836000018360001b6125ae565b905092915050565b6000611f54846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b61261e565b90509392505050565b600081836000018054905011611fbe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806127696022913960400191505060405180910390fd5b826000018281548110611fcd57fe5b9060005260206000200154905092915050565b60008082846000018054905011612042576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806128986022913960400191505060405180910390fd5b600084600001848154811061205357fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390612140576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121055780820151818401526020810190506120ea565b50505050905090810190601f1680156121325780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061215357fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b60006121a18473ffffffffffffffffffffffffffffffffffffffff166126fa565b6121ae576001905061249b565b600060608573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b6121d9611898565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561228957808201518184015260208101905061226e565b50505050905090810190601f1680156122b65780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061234e578051825260208201915060208101905060208303925061232b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146123b0576040519150601f19603f3d011682016040523d82523d6000602084013e6123b5565b606091505b509150915081612423576000815111156123d25780518082602001fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018061278b6032913960400191505060405180910390fd5b600081806020019051602081101561243a57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b600080836001016000848152602001908152602001600020549050600081146125a2576000600182039050600060018660000180549050039050600086600001828154811061251157fe5b906000526020600020015490508087600001848154811061252e57fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061256657fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506125a8565b60009150505b92915050565b60006125ba8383612745565b612613578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612618565b600090505b92915050565b60008084600101600085815260200190815260200160002054905060008114156126c5578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506126f3565b828560000160018303815481106126d857fe5b90600052602060002090600202016001018190555060009150505b9392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561273c57506000801b8214155b92505050919050565b60008083600101600084815260200190815260200160002054141590509291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a264697066735822122091ed3c2efafb4f5e3fe6c2a1afd58210f9092eac7b35116d0b9475c9c4af705164736f6c63430006020033",
  "sourceMap": "100:1736:1:-:0;;;435:1;406:30;;523:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;523:52:1;3419:365:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:40:3;385:10;737:20;;718:18;;;:40;;:::i;:::-;3499:4:6;3491:5;:12;;;;;;;;;;;;:::i;:::-;;3523:6;3513:7;:16;;;;;;;;;;;;:::i;:::-;;3617:40;2697:10;3636:20;;3617:18;;;:40;;:::i;:::-;3667:49;3029:10;3686:29;;3667:18;;;:49;;:::i;:::-;3726:51;3402:10;3745:31;;3726:18;;;:51;;:::i;:::-;3419:365;;100:1736:1;;1449:198:3;1547:10;1532:25;;:11;:25;;;;;1524:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1636:4;1600:20;:33;1621:11;1600:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1449:198;:::o;100:1736:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "100:1736:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;100:1736:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:140:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:140:3;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4690:90:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4690:90:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9350:209;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9350:209:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8684:381;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8684:381:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;620:84:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7564:200:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11061:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11061:300:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7259:152;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7259:152:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12010:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12010:149:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8102:161;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8102:161:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;266:37:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;266:37:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4418:167:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4418:167:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6798:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6798:87:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3988:211;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3988:211:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;442:49:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;442:49:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;406:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;784:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1165:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4889:94:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4889:94:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9858:290;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9858:290:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12882:282;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;12882:282:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;12882:282:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12882:282:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12882:282:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;12882:282:6;;;;;;;;;;;;;;;:::i;:::-;;348:51:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;348:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5826:740:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5826:740:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5826:740:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10470:154;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10470:154:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;918:209:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;918:209:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;915:140:3;992:4;1015:20;:33;1036:11;1015:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:40;;915:140;;;:::o;4690:90:6:-;4736:13;4768:5;4761:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4690:90;:::o;9350:209::-;9418:7;9445:16;9453:7;9445;:16::i;:::-;9437:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9528:15;:24;9544:7;9528:24;;;;;;;;;;;;;;;;;;;;;9521:31;;9350:209;;;:::o;8684:381::-;8764:13;8780:16;8788:7;8780;:16::i;:::-;8764:32;;8820:5;8814:11;;:2;:11;;;;8806:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8898:5;8882:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;8907:37;8924:5;8931:12;:10;:12::i;:::-;8907:16;:37::i;:::-;8882:62;8874:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9037:21;9046:2;9050:7;9037:8;:21::i;:::-;8684:381;;;:::o;620:84:1:-;654:4;693;686:11;;620:84;:::o;7564:200:6:-;7617:7;7736:21;:12;:19;:21::i;:::-;7729:28;;7564:200;:::o;11061:300::-;11220:41;11239:12;:10;:12::i;:::-;11253:7;11220:18;:41::i;:::-;11212:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11326:28;11336:4;11342:2;11346:7;11326:9;:28::i;:::-;11061:300;;;:::o;7259:152::-;7348:7;7374:30;7398:5;7374:13;:20;7388:5;7374:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;7367:37;;7259:152;;;;:::o;12010:149::-;12113:39;12130:4;12136:2;12140:7;12113:39;;;;;;;;;;;;:16;:39::i;:::-;12010:149;;;:::o;8102:161::-;8169:7;8189:15;8210:22;8226:5;8210:12;:15;;:22;;;;:::i;:::-;8188:44;;;8249:7;8242:14;;;8102:161;;;:::o;266:37:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4418:167:6:-;4482:7;4508:70;4525:7;4508:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;4501:77;;4418:167;;;:::o;6798:87::-;6838:13;6870:8;6863:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6798:87;:::o;3988:211::-;4052:7;4096:1;4079:19;;:5;:19;;;;4071:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4163:29;:13;:20;4177:5;4163:20;;;;;;;;;;;;;;;:27;:29::i;:::-;4156:36;;3988:211;;;:::o;442:49:1:-;;;;;;;;;;;;;;;;;:::o;406:30::-;;;;:::o;784:93::-;827:4;866;859:11;;784:93;:::o;1165:88::-;1203:4;1242;1235:11;;1165:88;:::o;4889:94:6:-;4937:13;4969:7;4962:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4889:94;:::o;9858:290::-;9972:12;:10;:12::i;:::-;9960:24;;:8;:24;;;;9952:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10070:8;10025:18;:32;10044:12;:10;:12::i;:::-;10025:32;;;;;;;;;;;;;;;:42;10058:8;10025:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;10122:8;10093:48;;10108:12;:10;:12::i;:::-;10093:48;;;10132:8;10093:48;;;;;;;;;;;;;;;;;;;;;;9858:290;;:::o;12882:282::-;13013:41;13032:12;:10;:12::i;:::-;13046:7;13013:18;:41::i;:::-;13005:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13118:39;13132:4;13138:2;13142:7;13151:5;13118:13;:39::i;:::-;12882:282;;;;:::o;348:51:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5826:740:6:-;5891:13;5924:16;5932:7;5924;:16::i;:::-;5916:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6003:23;6029:10;:19;6040:7;6029:19;;;;;;;;;;;6003:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6147:1;6127:8;6121:22;;;;;;;;;;;;;;;;:27;6117:74;;;6171:9;6164:16;;;;;6117:74;6319:1;6299:9;6293:23;:27;6289:110;;;6367:8;6377:9;6350:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6350:37:6;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6350:37:6;;;6336:52;;;;;6289:110;6529:8;6539:18;:7;:16;:18::i;:::-;6512:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6512:46:6;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6512:46:6;;;6498:61;;;5826:740;;;;:::o;10470:154::-;10559:4;10582:18;:25;10601:5;10582:25;;;;;;;;;;;;;;;:35;10608:8;10582:35;;;;;;;;;;;;;;;;;;;;;;;;;10575:42;;10470:154;;;;:::o;918:209:1:-;985:4;1010:7;:22;1018:13;1010:22;;;;;;;;;;;;;;;;;;;;;1009:23;1001:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1095:4;1070:7;:22;1078:13;1070:22;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1116:4;1109:11;;918:209;;;:::o;14333:117:6:-;14390:4;14413:30;14435:7;14413:12;:21;;:30;;;;:::i;:::-;14406:37;;14333:117;;;:::o;735:104:2:-;788:15;822:10;815:17;;735:104;:::o;21357:155:6:-;21449:2;21422:15;:24;21438:7;21422:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;21497:7;21493:2;21466:39;;21475:16;21483:7;21475;:16::i;:::-;21466:39;;;;;;;;;;;;21357:155;;:::o;6990:121:12:-;7059:7;7085:19;7093:3;:10;;7085:7;:19::i;:::-;7078:26;;6990:121;;;:::o;14811:329:6:-;14896:4;14920:16;14928:7;14920;:16::i;:::-;14912:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14995:13;15011:16;15019:7;15011;:16::i;:::-;14995:32;;15056:5;15045:16;;:7;:16;;;:51;;;;15089:7;15065:31;;:20;15077:7;15065:11;:20::i;:::-;:31;;;15045:51;:87;;;;15100:32;15117:5;15124:7;15100:16;:32::i;:::-;15045:87;15037:96;;;14811:329;;;;:::o;18323:559::-;18440:4;18420:24;;:16;18428:7;18420;:16::i;:::-;:24;;;18412:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18522:1;18508:16;;:2;:16;;;;18500:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18576:39;18597:4;18603:2;18607:7;18576:20;:39::i;:::-;18677:29;18694:1;18698:7;18677:8;:29::i;:::-;18717:35;18744:7;18717:13;:19;18731:4;18717:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;18762:30;18784:7;18762:13;:17;18776:2;18762:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;18803:29;18820:7;18829:2;18803:12;:16;;:29;;;;;:::i;:::-;;18867:7;18863:2;18848:27;;18857:4;18848:27;;;;;;;;;;;;18323:559;;;:::o;7616:135:13:-;7687:7;7721:22;7725:3;:10;;7737:5;7721:3;:22::i;:::-;7713:31;;7706:38;;7616:135;;;;:::o;7439:224:12:-;7519:7;7528;7548:11;7561:13;7578:22;7582:3;:10;;7594:5;7578:3;:22::i;:::-;7547:53;;;;7626:3;7618:12;;7648:5;7640:14;;7610:46;;;;;;;;;7439:224;;;;;:::o;8082:202::-;8189:7;8231:44;8236:3;:10;;8256:3;8248:12;;8262;8231:4;:44::i;:::-;8223:53;;8208:69;;8082:202;;;;;:::o;7172:112:13:-;7232:7;7258:19;7266:3;:10;;7258:7;:19::i;:::-;7251:26;;7172:112;;;:::o;13869:269:6:-;13982:28;13992:4;13998:2;14002:7;13982:9;:28::i;:::-;14028:48;14051:4;14057:2;14061:7;14070:5;14028:22;:48::i;:::-;14020:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13869:269;;;;:::o;169:723:14:-;225:13;451:1;442:5;:10;438:51;;;468:10;;;;;;;;;;;;;;;;;;;;;438:51;498:12;513:5;498:20;;528:14;552:75;567:1;559:4;:9;552:75;;584:8;;;;;;;614:2;606:10;;;;;;;;;552:75;;;636:19;668:6;658:17;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;658:17:14;;;;636:39;;685:13;710:1;701:6;:10;685:26;;728:5;721:12;;743:112;758:1;750:4;:9;743:112;;816:2;809:4;:9;;;;;;804:2;:14;793:27;;775:6;782:7;;;;;;;775:15;;;;;;;;;;;:45;;;;;;;;;;;842:2;834:10;;;;;;;;;743:112;;;878:6;864:21;;;;;;169:723;;;;:::o;6758:149:12:-;6842:4;6865:35;6875:3;:10;;6895:3;6887:12;;6865:9;:35::i;:::-;6858:42;;6758:149;;;;:::o;4450:108::-;4506:7;4532:3;:12;;:19;;;;4525:26;;4450:108;;;:::o;22068:93:6:-;;;;:::o;6731:135:13:-;6801:4;6824:35;6832:3;:10;;6852:5;6844:14;;6824:7;:35::i;:::-;6817:42;;6731:135;;;;:::o;6434:129::-;6501:4;6524:32;6529:3;:10;;6549:5;6541:14;;6524:4;:32::i;:::-;6517:39;;6434:129;;;;:::o;6206:174:12:-;6295:4;6318:55;6323:3;:10;;6343:3;6335:12;;6365:5;6357:14;;6349:23;;6318:4;:55::i;:::-;6311:62;;6206:174;;;;;:::o;4390:201:13:-;4457:7;4505:5;4484:3;:11;;:18;;;;:26;4476:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;4901:274:12:-;4968:7;4977;5026:5;5004:3;:12;;:19;;;;:27;4996:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5081:22;5106:3;:12;;5119:5;5106:19;;;;;;;;;;;;;;;;;;5081:44;;5143:5;:10;;;5155:5;:12;;;5135:33;;;;;4901:274;;;;;:::o;5582:315::-;5676:7;5695:16;5714:3;:12;;:17;5727:3;5714:17;;;;;;;;;;;;5695:36;;5761:1;5749:8;:13;;5764:12;5741:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5741:36:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5830:3;:12;;5854:1;5843:8;:12;5830:26;;;;;;;;;;;;;;;;;;:33;;;5823:40;;;5582:315;;;;;:::o;3951:107:13:-;4007:7;4033:3;:11;;:18;;;;4026:25;;3951:107;;;:::o;20301:1050:6:-;20421:4;20446:15;:2;:13;;;:15::i;:::-;20441:58;;20484:4;20477:11;;;;20441:58;20568:12;20582:23;20609:2;:7;;20653:45;;;20712:12;:10;:12::i;:::-;20738:4;20756:7;20777:5;20617:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20617:175:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;20617:175:6;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;20617:175:6;20609:184;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;20609:184:6;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;20567:226:6;;;;20808:7;20803:542;;20855:1;20835:10;:17;:21;20831:376;;;21000:10;20994:17;21060:15;21047:10;21043:2;21039:19;21032:44;20949:145;21132:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20803:542;21237:13;21264:10;21253:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21253:32:6;;;;;;;;;;;;;;;;21237:48;;1035:10;21317:16;;21307:26;;;:6;:26;;;;21299:35;;;;;20301:1050;;;;;;;:::o;4237:123:12:-;4308:4;4352:1;4331:3;:12;;:17;4344:3;4331:17;;;;;;;;;;;;:22;;4324:29;;4237:123;;;;:::o;2150:1512:13:-;2216:4;2332:18;2353:3;:12;;:19;2366:5;2353:19;;;;;;;;;;;;2332:40;;2401:1;2387:10;:15;2383:1273;;2744:21;2781:1;2768:10;:14;2744:38;;2796:17;2837:1;2816:3;:11;;:18;;;;:22;2796:42;;3078:17;3098:3;:11;;3110:9;3098:22;;;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;:38;;;;3358:1;3342:13;:17;3316:3;:12;;:23;3329:9;3316:23;;;;;;;;;;;:43;;;;3465:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;2150:1512;;;;;:::o;1578:404::-;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;1699:3;:11;;1716:5;1699:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1699:23:13;;;;;;;;;;;;;;;;;;;1879:3;:11;;:18;;;;1857:3;:12;;:19;1870:5;1857:19;;;;;;;;;;;:40;;;;1918:4;1911:11;;;;1657:319;1960:5;1953:12;;1578:404;;;;;:::o;1795:678:12:-;1871:4;1985:16;2004:3;:12;;:17;2017:3;2004:17;;;;;;;;;;;;1985:36;;2048:1;2036:8;:13;2032:435;;;2102:3;:12;;2120:38;;;;;;;;2137:3;2120:38;;;;2150:5;2120:38;;;2102:57;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2102:57:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2314:3;:12;;:19;;;;2294:3;:12;;:17;2307:3;2294:17;;;;;;;;;;;:39;;;;2354:4;2347:11;;;;;2032:435;2425:5;2389:3;:12;;2413:1;2402:8;:12;2389:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2451:5;2444:12;;;1795:678;;;;;;:::o;685:610:11:-;745:4;1003:16;1029:19;1051:66;1029:88;;;;1218:7;1206:20;1194:32;;1257:11;1245:8;:23;;:42;;;;;1284:3;1272:15;;:8;:15;;1245:42;1237:51;;;;685:610;;;:::o;3743:127:13:-;3816:4;3862:1;3839:3;:12;;:19;3852:5;3839:19;;;;;;;;;;;;:24;;3832:31;;3743:127;;;;:::o",
  "source": "pragma solidity ^0.6.2;\n\nimport \"../node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract Repoet is ERC721 {\n\n    struct Poem {\n        uint256 tokenId;\n        address owner;\n        bytes32 hashedTitle;\n        bytes32 hashedContent;\n    }\n\n    mapping(uint256 => Poem) public poems;\n    mapping (bytes32 => bool) isTaken;\n    mapping(address => uint256[]) public ownerToTokenId;\n\n    uint256 public totalTokens = 0;\n    mapping(uint256 => uint256) public indexToTokenId;\n\n    // TODO Add Metadata\n    constructor()\n    ERC721(\"Repoet\", \"POEM\") public {}\n\n    // New POEM for a particular owner\n    function mint() external returns (bool) {\n        // TODO\n        return true;\n    }\n\n    // Get the owner of a POEM\n    // return owner of a given POEM token\n\n    function getOwner() external view returns (bool) {\n        // TODO\n        return true;\n    }\n\n    // Verify uniqueness of a POEM\n    function contentIsUnique(bytes32 hashedContent)  external returns (bool) {\n        require(!isTaken[hashedContent], \"POEM content not unique\");\n        isTaken[hashedContent] = true;\n        return true;\n    }\n\n    // Get all an owner's POEMs\n    function getPOEMs() external returns (bool) {\n        // TODO\n        return true;\n    }\n\n    // Map all POEM tokens\n\n    // Enable transfer of POEM - onlyOwner\n\n    // function ownerOf(uint256 _tokenId) public override view returns (address) {\n    //     return tokenContract.ownerOf(_tokenId);\n    // }\n\n    // function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public override {\n    //     return tokenContract.safeTransferFrom(from, to, tokenId, _data);\n    // }\n\n    // function transferFrom(address from, address to, uint256 tokenId) public override {\n    //     return tokenContract.transferFrom(from, to, tokenId);\n    // }\n}",
  "sourcePath": "/Users/hollyatkinson/Documents/Code/repoet/repoet_client/contracts/Repoet.sol",
  "ast": {
    "absolutePath": "/Users/hollyatkinson/Documents/Code/repoet/repoet_client/contracts/Repoet.sol",
    "exportedSymbols": {
      "Repoet": [
        147
      ]
    },
    "id": 148,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 148,
        "sourceUnit": 1344,
        "src": "25:73:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 60,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1343,
              "src": "119:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1343",
                "typeString": "contract ERC721"
              }
            },
            "id": 61,
            "nodeType": "InheritanceSpecifier",
            "src": "119:6:1"
          }
        ],
        "contractDependencies": [
          174,
          227,
          237,
          1343,
          1446,
          1473,
          1496
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 147,
        "linearizedBaseContracts": [
          147,
          1343,
          1473,
          1496,
          1446,
          227,
          237,
          174
        ],
        "name": "Repoet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Repoet.Poem",
            "id": 70,
            "members": [
              {
                "constant": false,
                "id": 63,
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 70,
                "src": "155:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 62,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "155:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 70,
                "src": "180:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 64,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "180:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67,
                "name": "hashedTitle",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 70,
                "src": "203:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 66,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "203:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69,
                "name": "hashedContent",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 70,
                "src": "232:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 68,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "232:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Poem",
            "nodeType": "StructDefinition",
            "scope": 147,
            "src": "133:127:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5b93f270",
            "id": 74,
            "name": "poems",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 147,
            "src": "266:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Poem_$70_storage_$",
              "typeString": "mapping(uint256 => struct Repoet.Poem)"
            },
            "typeName": {
              "id": 73,
              "keyType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "274:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "266:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Poem_$70_storage_$",
                "typeString": "mapping(uint256 => struct Repoet.Poem)"
              },
              "valueType": {
                "contractScope": null,
                "id": 72,
                "name": "Poem",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 70,
                "src": "285:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Poem_$70_storage_ptr",
                  "typeString": "struct Repoet.Poem"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 78,
            "name": "isTaken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 147,
            "src": "309:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "318:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "309:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 76,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "329:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "c7bde51e",
            "id": 83,
            "name": "ownerToTokenId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 147,
            "src": "348:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 82,
              "keyType": {
                "id": 79,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "356:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "348:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 80,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "367:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 81,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "367:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7e1c0c09",
            "id": 86,
            "name": "totalTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 147,
            "src": "406:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 84,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "406:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 85,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "435:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7aef1164",
            "id": 90,
            "name": "indexToTokenId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 147,
            "src": "442:49:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 89,
              "keyType": {
                "id": 87,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "450:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "442:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 88,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "461:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "573:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 98,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "5265706f6574",
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "548:8:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_82df0701de301230c2391550a4f5e8bd7a6d3bf47aa4fa55621eda00805171af",
                      "typeString": "literal_string \"Repoet\""
                    },
                    "value": "Repoet"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "504f454d",
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "558:6:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c322dab1973566b74f50c0de34aaad4655a1dda4806c9b5fcebdb6cfac58879e",
                      "typeString": "literal_string \"POEM\""
                    },
                    "value": "POEM"
                  }
                ],
                "id": 95,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 92,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1343,
                  "src": "541:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$1343_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "541:24:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "534:2:1"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:0:1"
            },
            "scope": 147,
            "src": "523:52:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "660:44:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "693:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 102,
                  "id": 104,
                  "nodeType": "Return",
                  "src": "686:11:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1249c58b",
            "id": 106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "633:2:1"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 106,
                  "src": "654:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "653:6:1"
            },
            "scope": 147,
            "src": "620:84:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "833:44:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "866:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 110,
                  "id": 112,
                  "nodeType": "Return",
                  "src": "859:11:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "893d20e8",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "801:2:1"
            },
            "returnParameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 114,
                  "src": "827:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "826:6:1"
            },
            "scope": 147,
            "src": "784:93:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "991:136:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1009:23:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 122,
                            "name": "isTaken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "1010:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 124,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 123,
                            "name": "hashedContent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "1018:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1010:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "504f454d20636f6e74656e74206e6f7420756e69717565",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1034:25:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a1eb9ac0d1fa9a49f2ba47fe1cd8177c765ec9a18c7ceeca6cf202bdd8b6a44",
                          "typeString": "literal_string \"POEM content not unique\""
                        },
                        "value": "POEM content not unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a1eb9ac0d1fa9a49f2ba47fe1cd8177c765ec9a18c7ceeca6cf202bdd8b6a44",
                          "typeString": "literal_string \"POEM content not unique\""
                        }
                      ],
                      "id": 121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1001:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1001:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1001:59:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "isTaken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1070:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 131,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "hashedContent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "1078:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1070:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1095:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1070:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1070:29:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1116:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 120,
                  "id": 136,
                  "nodeType": "Return",
                  "src": "1109:11:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fdd1fb58",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contentIsUnique",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "name": "hashedContent",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 138,
                  "src": "943:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "942:23:1"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 138,
                  "src": "985:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "984:6:1"
            },
            "scope": 147,
            "src": "918:209:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1209:44:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1242:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 142,
                  "id": 144,
                  "nodeType": "Return",
                  "src": "1235:11:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9362916b",
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPOEMs",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1182:2:1"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 146,
                  "src": "1203:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1202:6:1"
            },
            "scope": 147,
            "src": "1165:88:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 148,
        "src": "100:1736:1"
      }
    ],
    "src": "0:1836:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/hollyatkinson/Documents/Code/repoet/repoet_client/contracts/Repoet.sol",
    "exportedSymbols": {
      "Repoet": [
        147
      ]
    },
    "id": 148,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/hollyatkinson/Documents/Code/repoet/repoet_client/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 148,
        "sourceUnit": 1344,
        "src": "25:73:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 60,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1343,
              "src": "119:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1343",
                "typeString": "contract ERC721"
              }
            },
            "id": 61,
            "nodeType": "InheritanceSpecifier",
            "src": "119:6:1"
          }
        ],
        "contractDependencies": [
          174,
          227,
          237,
          1343,
          1446,
          1473,
          1496
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 147,
        "linearizedBaseContracts": [
          147,
          1343,
          1473,
          1496,
          1446,
          227,
          237,
          174
        ],
        "name": "Repoet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Repoet.Poem",
            "id": 70,
            "members": [
              {
                "constant": false,
                "id": 63,
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 70,
                "src": "155:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 62,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "155:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 70,
                "src": "180:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 64,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "180:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67,
                "name": "hashedTitle",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 70,
                "src": "203:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 66,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "203:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69,
                "name": "hashedContent",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 70,
                "src": "232:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 68,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "232:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Poem",
            "nodeType": "StructDefinition",
            "scope": 147,
            "src": "133:127:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5b93f270",
            "id": 74,
            "name": "poems",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 147,
            "src": "266:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Poem_$70_storage_$",
              "typeString": "mapping(uint256 => struct Repoet.Poem)"
            },
            "typeName": {
              "id": 73,
              "keyType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "274:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "266:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Poem_$70_storage_$",
                "typeString": "mapping(uint256 => struct Repoet.Poem)"
              },
              "valueType": {
                "contractScope": null,
                "id": 72,
                "name": "Poem",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 70,
                "src": "285:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Poem_$70_storage_ptr",
                  "typeString": "struct Repoet.Poem"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 78,
            "name": "isTaken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 147,
            "src": "309:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "318:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "309:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 76,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "329:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "c7bde51e",
            "id": 83,
            "name": "ownerToTokenId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 147,
            "src": "348:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 82,
              "keyType": {
                "id": 79,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "356:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "348:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 80,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "367:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 81,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "367:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7e1c0c09",
            "id": 86,
            "name": "totalTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 147,
            "src": "406:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 84,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "406:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 85,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "435:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7aef1164",
            "id": 90,
            "name": "indexToTokenId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 147,
            "src": "442:49:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 89,
              "keyType": {
                "id": 87,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "450:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "442:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 88,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "461:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "573:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 98,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "5265706f6574",
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "548:8:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_82df0701de301230c2391550a4f5e8bd7a6d3bf47aa4fa55621eda00805171af",
                      "typeString": "literal_string \"Repoet\""
                    },
                    "value": "Repoet"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "504f454d",
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "558:6:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c322dab1973566b74f50c0de34aaad4655a1dda4806c9b5fcebdb6cfac58879e",
                      "typeString": "literal_string \"POEM\""
                    },
                    "value": "POEM"
                  }
                ],
                "id": 95,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 92,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1343,
                  "src": "541:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$1343_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "541:24:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "534:2:1"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:0:1"
            },
            "scope": 147,
            "src": "523:52:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "660:44:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "693:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 102,
                  "id": 104,
                  "nodeType": "Return",
                  "src": "686:11:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1249c58b",
            "id": 106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "633:2:1"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 106,
                  "src": "654:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "653:6:1"
            },
            "scope": 147,
            "src": "620:84:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "833:44:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "866:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 110,
                  "id": 112,
                  "nodeType": "Return",
                  "src": "859:11:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "893d20e8",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "801:2:1"
            },
            "returnParameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 114,
                  "src": "827:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "826:6:1"
            },
            "scope": 147,
            "src": "784:93:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "991:136:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1009:23:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 122,
                            "name": "isTaken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "1010:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 124,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 123,
                            "name": "hashedContent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "1018:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1010:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "504f454d20636f6e74656e74206e6f7420756e69717565",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1034:25:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a1eb9ac0d1fa9a49f2ba47fe1cd8177c765ec9a18c7ceeca6cf202bdd8b6a44",
                          "typeString": "literal_string \"POEM content not unique\""
                        },
                        "value": "POEM content not unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a1eb9ac0d1fa9a49f2ba47fe1cd8177c765ec9a18c7ceeca6cf202bdd8b6a44",
                          "typeString": "literal_string \"POEM content not unique\""
                        }
                      ],
                      "id": 121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1001:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1001:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1001:59:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "isTaken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1070:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 131,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "hashedContent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "1078:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1070:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1095:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1070:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1070:29:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1116:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 120,
                  "id": 136,
                  "nodeType": "Return",
                  "src": "1109:11:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fdd1fb58",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contentIsUnique",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "name": "hashedContent",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 138,
                  "src": "943:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "942:23:1"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 138,
                  "src": "985:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "984:6:1"
            },
            "scope": 147,
            "src": "918:209:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1209:44:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1242:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 142,
                  "id": 144,
                  "nodeType": "Return",
                  "src": "1235:11:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9362916b",
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPOEMs",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1182:2:1"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 146,
                  "src": "1203:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1202:6:1"
            },
            "scope": 147,
            "src": "1165:88:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 148,
        "src": "100:1736:1"
      }
    ],
    "src": "0:1836:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x90E9a0d32E1F24030FCADfbDee9bA9BdC0800C10",
      "transactionHash": "0xd2729f0f1103e9bfd31aea86c095e6f17636085a9e5f6f5bfe47a60ea3185a25"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-06-29T07:57:15.805Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}).     * If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings.     * .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \"\" | \"\" | \"\" | \"\" | \"token.uri/123\" | \"token.uri/123\" | \"token.uri/\" | \"123\" | \"token.uri/123\" | \"token.uri/\" | \"\" | \"token.uri/<tokenId>\" |===     * Requirements:     * - `tokenId` must exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}